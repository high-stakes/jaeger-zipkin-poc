plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id "com.google.protobuf" version "0.8.8"
	id 'java'
	id "idea"
}

apply plugin: 'io.spring.dependency-management'

def grpcVersion = '1.21.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.7.0'
def protocVersion = protobufVersion

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', 'Greenwich.SR1')
}

println "${rootDir.getParentFile().absolutePath}/api-backend"

sourceSets {
  main {
    proto {
      srcDir "${rootDir.getParentFile().absolutePath}/api-backend"
    }
  }
}

idea {
	module {
		sourceDirs += file("${projectDir}/src/generated/main/java");
		sourceDirs += file("${projectDir}/src/generated/main/grpc");
	}
}

protobuf {
	protoc {
		// The version of protoc must match protobuf-java. If you don't depend on
		// protobuf-java directly, you will be transitively depending on the
		// protobuf-java version that grpc depends on.
		artifact = "com.google.protobuf:protoc:3.6.0"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.12.0'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
	generatedFilesBaseDir = "$projectDir/src/generated"
}

dependencies {
	compile group: 'io.zipkin.brave', name: 'brave-instrumentation-grpc', version: '5.6.3'
	compile group: 'io.zipkin.brave', name: 'brave-instrumentation-p6spy', version: '5.6.3'
	compile("com.h2database:h2")

	implementation "org.springframework.boot:spring-boot-starter-jdbc"
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
	implementation 'org.springframework.kafka:spring-kafka'
	
	implementation 'io.github.lognet:grpc-spring-boot-starter:3.2.1'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
